{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\Desktop\\\\Rohan-React\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButon from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          handleChange: this.handleChange,\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButon, {\n            type: \"submit\",\n            children: \" Sign in \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButon, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \" Sign in with Google \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Rohan/Desktop/Rohan-React/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButon","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButon from \"../custom-button/custom-button.component\";\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =  {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const { email, password } = this.state;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { value, name } = e.target; \r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n\r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { googleSignInStart } = this.props;\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    handleChange={this.handleChange} \r\n                    value={this.state.email} \r\n                    label=\"email\"\r\n                    required \r\n                    />\r\n                    <FormInput \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    value={this.state.password} \r\n                    handleChange={this.handleChange}\r\n                    label=\"password\"\r\n                    required\r\n                     />\r\n                     <ButtonsBarContainer>\r\n                        <CustomButon type=\"submit\"> Sign in </CustomButon>\r\n                        <CustomButon type='button' onClick={googleSignInStart} isGoogleSignIn> Sign in with Google </CustomButon>\r\n                     </ButtonsBarContainer>\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}